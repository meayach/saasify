#!/usr/bin/env node

/**
 * Script de test complet pour v√©rifier le fonctionnement
 * de l'affichage du plan dans la configuration d'application
 */

const { MongoClient } = require("mongodb");

const MONGO_URI = "mongodb://localhost:27017";
const DATABASE_NAME = "saasify";
const APPLICATION_ID = "68bf71ef4198a0b558e988a8";
const FRONTEND_URL = `http://localhost:4201/applications/configure/${APPLICATION_ID}`;
const BACKEND_URL = "http://localhost:3001";

console.log("üß™ Test de fonctionnalit√© compl√®te - Affichage du plan");
console.log("=====================================\n");

async function testDatabaseConnection() {
  console.log("1. üîç Test de connexion MongoDB...");
  try {
    const client = new MongoClient(MONGO_URI);
    await client.connect();
    const db = client.db(DATABASE_NAME);

    // V√©rifier l'application
    const app = await db.collection("saasapplications").findOne({
      _id: { $oid: APPLICATION_ID },
    });

    if (!app) {
      console.log("   ‚ùå Application non trouv√©e dans la base");
      return false;
    }

    console.log(`   ‚úÖ Application trouv√©e: "${app.name}"`);
    console.log(`   üìã Plan par d√©faut: ${app.defaultPlanId || "Aucun"}`);

    // V√©rifier le plan associ√©
    if (app.defaultPlanId) {
      const plan = await db.collection("saasplans").findOne({
        _id: { $oid: app.defaultPlanId },
      });

      if (plan) {
        console.log(`   ‚úÖ Plan associ√© trouv√©: "${plan.name}"`);
        console.log(`   üí∞ Prix: ${plan.price} ${plan.currency}`);
      } else {
        console.log("   ‚ùå Plan associ√© non trouv√©");
      }
    }

    await client.close();
    return true;
  } catch (error) {
    console.log(`   ‚ùå Erreur de connexion: ${error.message}`);
    return false;
  }
}

async function testBackendAPI() {
  console.log("\n2. üåê Test API Backend...");
  try {
    const fetch = require("node-fetch");

    // Test de sant√© du backend
    const healthResponse = await fetch(`${BACKEND_URL}/health`);
    if (healthResponse.ok) {
      console.log("   ‚úÖ Backend accessible");
    } else {
      console.log("   ‚ö†Ô∏è  Backend r√©pond mais statut:", healthResponse.status);
    }

    // Test de l'endpoint de l'application
    const appResponse = await fetch(
      `${BACKEND_URL}/api/applications/${APPLICATION_ID}`
    );
    if (appResponse.ok) {
      const appData = await appResponse.json();
      console.log(`   ‚úÖ Donn√©es application r√©cup√©r√©es via API`);
      console.log(
        `   üìã Plan par d√©faut via API: ${appData.defaultPlanId || "Aucun"}`
      );
    } else {
      console.log(
        "   ‚ùå Impossible de r√©cup√©rer les donn√©es d'application via API"
      );
    }

    return true;
  } catch (error) {
    console.log(`   ‚ùå Backend inaccessible: ${error.message}`);
    return false;
  }
}

async function testFrontendAccess() {
  console.log("\n3. üñ•Ô∏è  Test acc√®s Frontend...");
  try {
    const fetch = require("node-fetch");

    const response = await fetch(FRONTEND_URL);
    if (response.ok) {
      console.log("   ‚úÖ Page de configuration accessible");
      const html = await response.text();

      // V√©rifier la pr√©sence de certains √©l√©ments
      if (html.includes("Aucun plan s√©lectionn√©")) {
        console.log('   ‚ö†Ô∏è  Message "Aucun plan s√©lectionn√©" pr√©sent');
      }

      if (html.includes("Plan Pro") || html.includes("plan-name")) {
        console.log("   ‚úÖ √âl√©ments de plan d√©tect√©s dans le HTML");
      }
    } else {
      console.log("   ‚ùå Page de configuration inaccessible");
    }

    return true;
  } catch (error) {
    console.log(`   ‚ùå Frontend inaccessible: ${error.message}`);
    return false;
  }
}

async function main() {
  console.log(`üìÖ ${new Date().toLocaleString()}`);
  console.log(`üéØ Application ID: ${APPLICATION_ID}`);
  console.log(`üåê URL de test: ${FRONTEND_URL}\n`);

  const dbOk = await testDatabaseConnection();
  const backendOk = await testBackendAPI();
  const frontendOk = await testFrontendAccess();

  console.log("\nüìä R√©sum√© des tests:");
  console.log(`   Base de donn√©es: ${dbOk ? "‚úÖ" : "‚ùå"}`);
  console.log(`   Backend API: ${backendOk ? "‚úÖ" : "‚ùå"}`);
  console.log(`   Frontend: ${frontendOk ? "‚úÖ" : "‚ùå"}`);

  if (dbOk && backendOk && frontendOk) {
    console.log("\nüéâ Tous les composants fonctionnent !");
    console.log(`üëÄ Visitez: ${FRONTEND_URL}`);
    console.log(
      '   Le plan "Plan Pro" devrait s\'afficher au lieu de "Aucun plan s√©lectionn√©"'
    );
  } else {
    console.log("\n‚ö†Ô∏è  Certains composants ne fonctionnent pas correctement");
    console.log(
      "   V√©rifiez que tous les serveurs sont d√©marr√©s avec les chemins absolus"
    );
  }
}

// Ex√©cuter le test
if (require.main === module) {
  main().catch(console.error);
}
