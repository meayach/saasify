// Script pour tester directement l'application avec plan
const { MongoClient } = require("mongodb");

async function testApplicationWithPlan() {
  const client = new MongoClient("mongodb://localhost:27017");

  try {
    await client.connect();
    console.log("üîó Connect√© √† MongoDB");

    const db = client.db("saas-database");
    const collection = db.collection("saasapplications");

    // V√©rifier l'application Dropbox synchronis√©e
    const targetId = "68bf71ef4198a0b558e988a8";
    const application = await collection.findOne({
      _id: require("mongodb").ObjectId.createFromHexString(targetId),
    });

    if (application) {
      console.log("‚úÖ Application trouv√©e dans dashboard:");
      console.log("ID:", application._id);
      console.log("Name:", application.name);
      console.log("Status:", application.status);
      console.log("DefaultPlanId:", application.defaultPlanId);
      console.log("IsActive:", application.isActive);

      // R√©cup√©rer le plan associ√©
      let plan = null;
      if (application.defaultPlanId) {
        const plansCollection = db.collection("saasplans");
        plan = await plansCollection.findOne({
          _id: require("mongodb").ObjectId.createFromHexString(
            application.defaultPlanId
          ),
        });

        if (plan) {
          console.log("\nüéØ Plan associ√©:");
          console.log("ID:", plan._id);
          console.log("Name:", plan.name);
          console.log("Type:", plan.type);
          console.log("Price:", plan.price);
          console.log("Features:", plan.features);
        } else {
          console.log("‚ùå Plan non trouv√© avec ID:", application.defaultPlanId);
        }
      } else {
        console.log("‚ö†Ô∏è Aucun plan par d√©faut d√©fini");
      }

      console.log("\nüìã R√©sum√© pour le frontend:");
      console.log("‚úÖ L'application existe dans la bonne collection");
      console.log("‚úÖ Elle a un defaultPlanId d√©fini");
      console.log("‚úÖ Le plan associ√© existe");
      console.log("\nüåê Le frontend devrait maintenant afficher:");
      console.log(`Plan s√©lectionn√©: ${plan?.name || "Non trouv√©"}`);
      console.log(
        "URL de test: http://localhost:4201/applications/configure/68bf71ef4198a0b558e988a8"
      );
    } else {
      console.log("‚ùå Application non trouv√©e dans la collection dashboard");
    }
  } catch (error) {
    console.error("‚ùå Erreur:", error.message);
  } finally {
    await client.close();
    console.log("\nüîê Connexion ferm√©e");
  }
}

testApplicationWithPlan();
